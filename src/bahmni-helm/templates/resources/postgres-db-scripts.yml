apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-postgres-db-scripts
data:
  create_openelis_db.sh: |
    #!/bin/bash
    set -e
    export PGPASSWORD=$POSTGRES_PASSWORD
    function create_user_and_database() {
      local database=$1
      local user=$2
      local password=$3
      echo "  Creating '$user' user and '$database' database..."
      psql -v ON_ERROR_STOP=1 -h $POSTGRES_HOST --username "$POSTGRES_USER" $POSTGRES_DB <<-EOSQL
          CREATE USER $user WITH UNENCRYPTED PASSWORD '$password';
          CREATE DATABASE $database;
          GRANT ALL PRIVILEGES ON DATABASE $user TO $database;
    EOSQL
    } 
    PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST --username $POSTGRES_USER $POSTGRES_DB  -tAc "SELECT 1 FROM pg_roles WHERE rolname='$OPENELIS_DB_USER'" | grep -q 1 ||  create_user_and_database ${OPENELIS_DB_NAME} ${OPENELIS_DB_USER} ${OPENELIS_DB_PASSWORD} && PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST --username $POSTGRES_USER $OPENELIS_DB_NAME < /sqls/OpenELIS_base.sql
    #tail -f /dev/null
  create_odoo_db.sh: |
    #!/bin/bash

    set -eu

    function create_user() {
      local user=$1
      local password=$2
      echo "  Creating '$user' user..."
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" $POSTGRES_DB <<-EOSQL
          CREATE USER $user WITH UNENCRYPTED PASSWORD '$password';
          ALTER USER $user CREATEDB;
    EOSQL
    }

    create_user ${ODOO_DB_USER} ${ODOO_DB_PASSWORD}
  create_metabase_db.sh: |
    #!/bin/bash

    set -eu

    function create_user_and_database() {
      local database=$1
      local user=$2
      local password=$3
      echo "  Creating '$user' user and '$database' database..."
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" $POSTGRES_DB <<-EOSQL
          CREATE USER $user WITH UNENCRYPTED PASSWORD '$password';
          CREATE DATABASE $database;
          GRANT ALL PRIVILEGES ON DATABASE $user TO $database;
    EOSQL
    }

    create_user_and_database ${METABASE_DB_NAME} ${METABASE_DB_USER} ${METABASE_DB_PASSWORD}
  create_analytics_db.sh: |
    #!/bin/bash

    set -eu

    function create_user_and_database() {
      local database=$1
      local user=$2
      local password=$3
      echo "  Creating '$user' user and '$database' database..."
      PGPASSWORD=$POSTGRES_PASSWORD psql -v ON_ERROR_STOP=1  -h $POSTGRES_HOST --username "$POSTGRES_USER" $POSTGRES_DB <<-EOSQL
          CREATE USER $user WITH UNENCRYPTED PASSWORD '$password';
          CREATE DATABASE $database;
          GRANT ALL PRIVILEGES ON DATABASE $user TO $database;
    EOSQL
    }

    PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST --username $POSTGRES_USER $POSTGRES_DB  -tAc "SELECT 1 FROM pg_roles WHERE rolname='$ANALYTICS_DB_USER'" | grep -q 1 || create_user_and_database ${ANALYTICS_DB_NAME} ${ANALYTICS_DB_USER} ${ANALYTICS_DB_PASSWORD}
